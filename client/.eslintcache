[{"C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\index.js":"1","C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\Routes.js":"2","C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\core\\Dashboard.js":"3","C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\user\\SignIn.js":"4","C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\core\\ModalForm.js":"5","C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\api\\apiFunc.js":"6","C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\config.js":"7","C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\core\\DisplayItem.js":"8"},{"size":230,"mtime":1608822564107,"results":"9","hashOfConfig":"10"},{"size":505,"mtime":1608922033738,"results":"11","hashOfConfig":"10"},{"size":7317,"mtime":1608981100870,"results":"12","hashOfConfig":"10"},{"size":683,"mtime":1608777944719,"results":"13","hashOfConfig":"10"},{"size":3706,"mtime":1608978317075,"results":"14","hashOfConfig":"10"},{"size":987,"mtime":1608980992916,"results":"15","hashOfConfig":"10"},{"size":39,"mtime":1608910576024,"results":"16","hashOfConfig":"10"},{"size":1046,"mtime":1608972185926,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"eyva84",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\index.js",[],["37","38"],"C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\Routes.js",[],"C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\core\\Dashboard.js",["39","40","41","42","43","44"],"C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\user\\SignIn.js",[],"C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\core\\ModalForm.js",["45","46"],"import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst ModalForm = (props) => {\r\n    \r\n    const onCloseButton = event => {\r\n        console.log(props.show)\r\n        props.onClose && props.onClose(event);\r\n    }\r\n\r\n    const handleSelectedDate = date => {\r\n        props.handleSelectedDate && props.handleSelectedDate(date);\r\n    }\r\n\r\n    const handleStartTime = date => {\r\n        props.handleStartTime && props.handleStartTime(date)\r\n    }\r\n    \r\n    const handleEndTime = date => {\r\n        props.handleEndTime && props.handleEndTime(date)\r\n    }\r\n    \r\n\r\n\r\n    const handleSubmit = event => {\r\n        props.handleSubmit && props.handleSubmit(event)\r\n    }\r\n\r\n    if(!props.show){\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" onHide={onCloseButton} centered >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add Slot\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    \r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col\">\r\n                            <h5>Select Date</h5>\r\n                            <DatePicker selected={props.selectedDate} dateFormat=\"dd/MM/yyyy\" onChange={date => handleSelectedDate(date)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        <h5>Start Time</h5>\r\n                        <DatePicker\r\n                            selected={props.startTime}\r\n                            onChange={date => handleStartTime(date)}\r\n                            showTimeSelect\r\n                            showTimeSelectOnly\r\n                            timeIntervals={15}\r\n                            timeCaption=\"Time\"\r\n                            dateFormat=\"HH:mm\"\r\n                            timeFormat=\"HH:mm\"\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"col\">\r\n                        <h5>End Time</h5>\r\n                        <DatePicker\r\n                            selected={props.endTime}\r\n                            onChange={date => handleEndTime(date)}\r\n                            showTimeSelect\r\n                            showTimeSelectOnly\r\n                            timeIntervals={15}\r\n                            timeCaption=\"Time\"\r\n                            dateFormat=\"HH:mm\"\r\n                            timeFormat=\"HH:mm\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Button onClick={handleSubmit}>Add</Button>\r\n                {props.error && <span className=\"col md-8\">{props.error}</span>}\r\n            </form>\r\n                \r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nModalForm.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    show: PropTypes.bool.isRequired,\r\n    handleSelectedDate: PropTypes.func.isRequired,\r\n    handleStartTime: PropTypes.func.isRequired,\r\n    handleEndTime: PropTypes.func.isRequired,\r\n    selectedDate: PropTypes.instanceOf(Date).isRequired,\r\n    startTime: PropTypes.instanceOf(Date).isRequired,\r\n    endTime: PropTypes.instanceOf(Date).isRequired\r\n  };\r\n\r\nexport default ModalForm;","C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\api\\apiFunc.js",[],"C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\config.js",[],["47","48"],"C:\\Users\\farookjintha\\Desktop\\Projects-FJ\\Doctor-Appointment\\Doctor-Appointment\\client\\src\\core\\DisplayItem.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":16},{"ruleId":"53","severity":1,"message":"57","line":15,"column":12,"nodeType":"55","messageId":"56","endLine":15,"endColumn":21},{"ruleId":"53","severity":1,"message":"58","line":15,"column":23,"nodeType":"55","messageId":"56","endLine":15,"endColumn":35},{"ruleId":"53","severity":1,"message":"59","line":18,"column":22,"nodeType":"55","messageId":"56","endLine":18,"endColumn":33},{"ruleId":"53","severity":1,"message":"60","line":20,"column":32,"nodeType":"55","messageId":"56","endLine":20,"endColumn":53},{"ruleId":"61","severity":1,"message":"62","line":41,"column":8,"nodeType":"63","endLine":41,"endColumn":10,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"65","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":24},{"ruleId":"53","severity":1,"message":"66","line":1,"column":26,"nodeType":"55","messageId":"56","endLine":1,"endColumn":35},{"ruleId":"49","replacedBy":"67"},{"ruleId":"51","replacedBy":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'showSlots' is assigned a value but never used.","'setShowSlots' is assigned a value but never used.","'setIsBooked' is assigned a value but never used.","'setDateForSlotDisplay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displaySlots'. Either include it or remove the dependency array.","ArrayExpression",["71"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["69"],["70"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [displaySlots]",{"range":"74","text":"75"},[1421,1423],"[displaySlots]"]